// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// compress
SEXP compress(SEXP r_content, String format);
RcppExport SEXP _memCompression_compress(SEXP r_contentSEXP, SEXP formatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_content(r_contentSEXP);
    Rcpp::traits::input_parameter< String >::type format(formatSEXP);
    rcpp_result_gen = Rcpp::wrap(compress(r_content, format));
    return rcpp_result_gen;
END_RCPP
}
// decompress
SEXP decompress(SEXP r_source, String format, SEXP r_guess_size);
RcppExport SEXP _memCompression_decompress(SEXP r_sourceSEXP, SEXP formatSEXP, SEXP r_guess_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_source(r_sourceSEXP);
    Rcpp::traits::input_parameter< String >::type format(formatSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_guess_size(r_guess_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(decompress(r_source, format, r_guess_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_memCompression_compress", (DL_FUNC) &_memCompression_compress, 2},
    {"_memCompression_decompress", (DL_FUNC) &_memCompression_decompress, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_memCompression(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
